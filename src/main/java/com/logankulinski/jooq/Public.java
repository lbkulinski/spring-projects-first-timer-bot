/*
 * This file is generated by jOOQ.
 */
package com.logankulinski.jooq;


import com.logankulinski.jooq.tables.Issue;
import com.logankulinski.jooq.tables.Label;
import com.logankulinski.jooq.tables.Repository;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.issue</code>.
     */
    public final Issue ISSUE = Issue.ISSUE;

    /**
     * The table <code>public.label</code>.
     */
    public final Label LABEL = Label.LABEL;

    /**
     * The table <code>public.repository</code>.
     */
    public final Repository REPOSITORY = Repository.REPOSITORY;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.BATCH_JOB_EXECUTION_SEQ,
            Sequences.BATCH_JOB_SEQ,
            Sequences.BATCH_STEP_EXECUTION_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Issue.ISSUE,
            Label.LABEL,
            Repository.REPOSITORY
        );
    }
}
